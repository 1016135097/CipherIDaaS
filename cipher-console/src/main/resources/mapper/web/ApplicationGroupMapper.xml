<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="cipher.console.oidc.mapper.ApplicationGroupMapper">

    <select id="getAllApplications" resultType="cipher.console.oidc.domain.web.GroupAuthorizationMapDomain">
        SELECT * FROM cipher_group_authorization_map;
    </select>


    <select id="getApplicationsByGroupId" parameterType="int"
            resultType="cipher.console.oidc.domain.web.ApplicationInfoDomain">
        SELECT * FROM
          cipher_application_info,cipher_group_authorization_map
        WHERE
          group_id =#{groupId}
          and
          cipher_application_info.id = cipher_group_authorization_map.application_id;
    </select>

    <select id="getApplicationByAccountNumberAndGroupId"
            parameterType="cipher.console.oidc.model.UserInfoModel"
            resultType="cipher.console.oidc.domain.web.ApplicationInfoDomain">
          select a.id,a.app_client_id as application_id,a.application_name,b.sub_account from (select
          cipher_application_info.id,
          cipher_group_info.group_id,
          cipher_group_info.group_name,
          cipher_group_info.parent_group_id,
          cipher_role_group_map.role_id,
          cipher_role_info.role_name,
          cipher_role_application_map.application_id,
          cipher_application_info.application_name,
          cipher_group_user_map.account_number,
          cipher_application_info.application_id as app_client_id
        from cipher_group_info
        left join cipher_role_group_map on  cipher_group_info.group_id = cipher_role_group_map.group_id
        left join cipher_role_info on cipher_role_group_map.role_id = cipher_role_info.id
        left join cipher_role_application_map on cipher_role_application_map.role_id = cipher_role_info.id
        left join cipher_application_info on cipher_role_application_map.application_id = cipher_application_info.id
        left join cipher_group_user_map on cipher_group_user_map.group_id = cipher_group_info.group_id
        where cipher_group_info.group_id = #{groupId}) a left join (select sub_account,cipher_sub_account.app_client_id,cipher_sub_account_map.account_number
        from cipher_sub_account,cipher_sub_account_map
        where cipher_sub_account_map.sub_id = cipher_sub_account.id) b on a.app_client_id = b.app_client_id
        and a.account_number = b.account_number
        where a.account_number = #{accountNumber}
        group by a.application_name;

    </select>


    <select id="selectApplication" resultType="cipher.console.oidc.domain.web.ApplicationInfoDomain">
      select dd.id as id ,dd.application_id as applicationId,dd.application_name as applicationName,nn.account_number as accountNumber from cipher_application_info dd
       LEFT JOIN cipher_group_authorization_map mm on mm.application_id=dd.id
       LEFT JOIN cipher_group_user_map nn on nn.group_id=mm.group_id
       where nn.account_number=#{accountNumber} group by dd.application_name
    </select>

    <select id="selectAllGroupApplication" resultType="cipher.console.oidc.model.GroupApplicationModel">
        select
          cipher_application_info.id,
          cipher_group_info.group_id,
          cipher_group_info.group_name,
          cipher_group_info.parent_group_id,
          cipher_role_info.role_name,
          cipher_application_info.application_name,
          cipher_application_info.application_id
          from cipher_group_info
          left join cipher_role_group_map on  cipher_group_info.group_id = cipher_role_group_map.group_id
          left join cipher_role_info on cipher_role_group_map.role_id = cipher_role_info.id
          left join cipher_role_application_map on cipher_role_application_map.role_id = cipher_role_info.id
          left join cipher_application_info on cipher_role_application_map.application_id = cipher_application_info.id
          where cipher_application_info.application_status=1
    </select>

    <select id="selectUserRoleApplication" resultType="cipher.console.oidc.model.GroupApplicationModel"
            parameterType="String">

        select a.id,a.app_client_id as application_id,a.application_name,b.sub_account
        from (select
          cipher_user_info.account_number,
          cipher_role_info.id as role_id,
          role_name,
          cipher_role_application_map.application_id,
          cipher_application_info.application_name,
          cipher_application_info.application_id as app_client_id,
          cipher_group_user_map.group_id,
          cipher_application_info.id
        from cipher_group_user_map,cipher_user_info
        left join cipher_role_user_map on cipher_user_info.account_number = cipher_role_user_map.user_id
        left join cipher_role_info on cipher_role_info.id = cipher_role_user_map.role_id
        left join cipher_role_application_map on cipher_role_application_map.role_id = cipher_role_info.id
        left join cipher_application_info on cipher_application_info.id = cipher_role_application_map.application_id
        where cipher_user_info.account_number = #{accountNumber} and cipher_group_user_map.account_number = cipher_user_info.account_number and cipher_application_info.application_status=1
        group by cipher_application_info.application_id) a left join (select sub_account,cipher_sub_account.app_client_id,cipher_sub_account_map.account_number
        from cipher_sub_account,cipher_sub_account_map
        where cipher_sub_account_map.sub_id = cipher_sub_account.id) b on a.app_client_id = b.app_client_id group by a.app_client_id;

    </select>


    <delete id="deleteGroupAuthorizationMap" parameterType="cipher.console.oidc.domain.web.GroupAuthorizationMapDomain">
        delete from cipher_group_authorization_map where 1=1
        <if test="groupId != null">
            and group_id= #{groupId,jdbcType=INTEGER}
        </if>
        <if test="applicationId != null">
            and application_id= #{applicationId,jdbcType=VARCHAR}
        </if>

    </delete>
    <insert id="insertGroupAuthorizationMap" parameterType="cipher.console.oidc.domain.web.GroupAuthorizationMapDomain">
        insert into cipher_group_authorization_map
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="groupId != null">
                group_id,
            </if>
            <if test="applicationId != null">
                application_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="groupId != null">
                #{groupId,jdbcType=INTEGER},
            </if>
            <if test="applicationId != null">
                #{applicationId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>


    <select id="selectAppList" resultType="cipher.console.oidc.domain.web.ApplicationInfo">
       select tt.id as id ,application_name as applicationName from cipher_application_info tt
       LEFT JOIN cipher_group_authorization_map map on tt.id=map.application_id
       where map.group_id=#{groupId}
    </select>


    <select id="selectNewApplicationList" resultType="cipher.console.oidc.model.GroupApplicationModel">
       select dd.id as id ,dd.application_id as applicationId,dd.application_name as applicationName,nn.account_number as accountNumber from cipher_application_info dd
       LEFT JOIN cipher_group_authorization_map mm on mm.application_id=dd.id
       LEFT JOIN cipher_group_user_map nn on nn.group_id=mm.group_id
       where nn.user_id=#{uuid} and dd.application_status=1
 UNION
 select dd.id as id,dd.application_id as applicationId,dd.application_name as applicationName,nn.user_id as accountNumber from cipher_application_info dd
       LEFT JOIN cipher_role_application_map mm on mm.application_id=dd.id
       LEFT JOIN cipher_role_user_map nn on nn.role_id=mm.role_id
       where nn.user_id=#{uuid} and dd.application_status=1

 UNION
 select dd.id as id,dd.application_id as applicationId,dd.application_name as applicationName,nn.user_id as accountNumber from cipher_application_info dd
       LEFT JOIN cipher_team_application_map mm on mm.application_id=dd.id
       LEFT JOIN cipher_team_user_map nn on nn.team_id=mm.team_id
       where nn.user_id=#{uuid} and dd.application_status=1
UNION
       select dd.id as id,dd.application_id as applicationId,dd.application_name as applicationName,mm.account_number as accountNumber from cipher_application_info dd
       LEFT JOIN cipher_user_application_map mm on mm.application_id=dd.id
       where mm.user_id=#{uuid} and dd.application_status=1
    </select>


    <select id="selectHaveApplicationList" resultType="cipher.console.oidc.model.GroupApplicationModel"
            parameterType="cipher.console.oidc.model.GroupApplicationModel">
        select tt.id as id,
        tt.application_id as applicationId,tt.application_name as applicationName
        from cipher_group_authorization_map ss
        LEFT JOIN cipher_application_info tt on ss.application_id=tt.id
        where 1=1
        <if test="groupId != null ">
            and ss.group_id = #{groupId}
        </if>
    </select>


    <select id="selectNoneApplicationList" resultType="cipher.console.oidc.model.GroupApplicationModel">
        SELECT
        application_id,
        application_name as applicationName
        FROM cipher_application_info
        where id not in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>


    <select id="selectApplicationList" resultType="cipher.console.oidc.model.GroupApplicationModel">
        select tt.group_id as groupId,
        ss.application_id as applicationId,tt.group_name as groupName
        from cipher_group_authorization_map ss
        LEFT JOIN cipher_group_info tt on ss.group_id=tt.group_id
        where 1=1
        <if test="applicationId != null ">
            and ss.application_id = #{applicationId}
        </if>
    </select>

    <select id="selectGroupAuthorizationMap" resultType="cipher.console.oidc.domain.web.GroupAuthorizationMapDomain" parameterType="cipher.console.oidc.domain.web.GroupAuthorizationMapDomain">
        select *  from cipher_group_authorization_map where 1=1
        <if test="groupId != null">
            and group_id= #{groupId}
        </if>
        <if test="applicationId != null">
            and application_id= #{applicationId}
        </if>
    </select>


</mapper>